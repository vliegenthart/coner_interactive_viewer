.Ost__wallet {
  width: 400px;
  height: 600px;
  padding: 20px;
  background: #f6fbfc;
  overflow: scroll;
  .Transaction__list {
    .Progress__wrapper {
      text-align: center;
      margin-top: 250px;
    }
    .Ledger__date {
      font-size: 13px;
      margin: 30px 0 10px;;
    }
    ul {
      padding: 0;
      margin: 0;

      li {
        list-style: none;
        padding: 0;
        margin: 0;

        .Transaction_wrapper {
          background: white;
          margin-bottom: 10px;
          border-radius: 5px;
          padding: 15px;
          .Icon__wrapper {
            float: left;
            height: 32px;
            width: 32px;
            // background: #64DD17;
            background: #03dac6;
            border-radius: 16px;
            line-height: 32px;
            margin-top: 4px;
            color: black;
            &.sent {
              background: #F06292;
            }
            svg {
              font-size: 18px;
              margin: 7px;
            }
          }
          .Transaction__message {
            margin-left: 45px;
            font-weight: bold;
            font-size: 16px;

          }
          .Transaction__info {
            margin-left: 45px;
            // margin-top: 5px;
            font-size: 13px;
          }
        }
      }
    }
  }

}

// <div className="Transaction__message">{actionIds[trans['action_id']].walletMessage && actionIds[trans['action_id']].walletMessage.verb} {parseFloat(trans.amount).toFixed()} CNR {actionIds[trans['action_id']].walletMessage.actionText && `(${actionIds[trans['action_id']].walletMessage.actionText})`}</div>
        
//         <div className="Transaction__info">From {actionIds[trans['action_id']].kind === 'company_to_user' ? 'Coner Company' : (users[trans['from_user_id']] && users[trans['from_user_id']].name)} - {new Date(trans.timestamp).toLocaleTimeString()}</div>